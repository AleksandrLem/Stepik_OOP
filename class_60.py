# Реализуйте функцию hash_function(), которая принимает один аргумент:

# obj — произвольный объект
# Функция должна вычислять хеш-значение объекта obj согласно следующему алгоритму:

# вычисление значения выражения:
# ord(obj[0]) * ord(obj[-1]) + ord(obj[1]) * ord(obj[-2]) + ord(obj[2]) * ord(obj[-3]) + ...
# где obj — объект, преобразованный в строку с помощью функции str().
# Обратите внимание, что суммироваться должны произведения первого и
# последнего элементов, второго и предпоследнего, и так далее до середины.
# Если obj имеет нечетное количество символов, то серединный элемент
# должен прибавляться без перемножения
# вычисление значения выражения:
# ord(obj[0]) * 1 - ord(obj[1]) * 2 + ord(obj[2]) * 3 - ord(obj[3]) * 4 + ...
# где obj — объект, преобразованный в строку с помощью функции str()
# вычисление значения выражения:
# (temp1 * temp2) % 123456791
# где temp1 — значение, полученное в первом шаге, temp2 — значение,
# полученное во втором шаге
# и возвращать значение, полученное в третьем шаге.


def hash_function(obj):
    temp1 = 0
    temp2 = 0
    obj = str(obj)
    if len(obj) % 2 != 0:
        middl_el = ord(obj[len(obj)//2])
    else:
        middl_el = 0
    for i in range(len(obj)//2):
        k = (i+1)*(-1)
        temp1 += ord(obj[i])*ord(obj[k])
    temp1 = temp1 + middl_el

    for i in range(len(obj)):
        j = i+1
        if i % 2 == 0:
            temp2 += ord(obj[i])*j
        else:
            temp2 -= ord(obj[i])*j
    return (temp1 * temp2) % 123456791


print(hash_function('python'))
print(hash_function(12345))
print(hash_function(None))
