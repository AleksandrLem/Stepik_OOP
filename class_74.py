# Вам доступен класс Counter, описывающий неотрицательный счетчик. При создании экземпляра класс принимает один аргумент:

# start — начальное значение счетчика, по умолчанию равняется 0
# Экземпляр класса Counter имеет один атрибут:

# value — текущее значение счетчика
# Класс Counter имеет два метода экземпляра:

# inc() — метод, принимающий в качестве аргумента целое число и
# увеличивающий значение счетчика на это число. Если число не передано,
# метод увеличивает значение счетчика на единицу
# dec() — метод, принимающий в качестве аргумента целое число и
# уменьшающий значение счетчика на это число. Если число не передано,
# метод уменьшает значение счетчика на единицу. Значение счетчика
# считается равным 0, если при уменьшении оно становится отрицательным
# Реализуйте класс DoubledCounter, наследника класса Counter,
# описывающий неотрицательный счетчик, значение которого увеличивается и
# уменьшается дважды при вызове соответствующих методов.
# Процесс создания экземпляра класса DoubledCounter должен совпадать
# с процессом создания экземпляра класса Counter.

# Экземпляр класса DoubledCounter должен иметь один атрибут:

# value — текущее значение счетчика
# Класс DoubledCounter должен иметь два метода экземпляра:

# inc() — метод, принимающий в качестве аргумента целое число и
# увеличивающий значение счетчика на это число дважды. Если число
# не передано, метод должен увеличить значение счетчика на два
# dec() — метод, принимающий в качестве аргумента целое число и
# уменьшающий значение счетчика на это число дважды. Если число
# не передано, метод должен уменьшить значение счетчика на два.
# Значение счетчика считается равным 0, если при уменьшении
# оно становится отрицательным


class Counter:

    def __init__(self, start=0) -> None:
        self.value = start

    def inc(self, num_plus=1):
        self.value += num_plus

    def dec(self, num_minus=1):
        self.value -= num_minus
        self.value = max(self.value, 0)


class DoubledCounter(Counter):

    def __init__(self, start=0) -> None:
        super().__init__(start)

    def inc(self, num_plus=1):
        return super().inc(2*num_plus)

    def dec(self, num_minus=1):
        return super().dec(2*num_minus)


counter = DoubledCounter(20)

print(counter.value)
counter.inc()
counter.inc(5)
print(counter.value)
counter.dec()
counter.dec(10)
print(counter.value)
counter.dec(10)
print(counter.value)
